1.nc文件的数据构造
一般来说，nc文件有多组数据。
netCDF4查看nc文件数据基本信息代码如下所示

  import netCDF4 as nc
  
  #导入文件
  filename = r'D:\data\rain.nc'
  f = nc.Dataset(filename)
  
  #查看nc文件信息
  #print(f)
  #获取所有变量信息
  all_vars = f.variables.keys()  #查看变量名称
  print(all_vars) 
  all_vars_info = f.variables.items()  #查看变量详细信息
  print(all_vars_info)  

举例，降水数据里面可能有：prep,time,lat,lon四组数据：
（1）print(all_vars)输出的信息如下：
dict_keys(['prep', 'time', 'lat', 'lon'])
其中prep(time,lat,lon)为三维的降水数据（时间×纬度×经度），time、lat、lon为一维数据
（2）print(all_vars_info)输出的信息如下（以lon为例）：
float32 lon(lon)
    units: degrees_east
    long_name: longitude
unlimited dimensions: 
current shape = (360,)
filling on, default _FillValue of 9.969209968386869e+36 used), ('lat', <class 'netCDF4._netCDF4.Variable'>
其中units表示单位，long_name表示全称，current shape表示各维度数量。default _FillValue表示缺测/异常值

2.nc文件处理（配合metedraw使用）
先明确自己需要处理的维度，比如说我打算做【时间】分布特征（时间序列、年变化、月变化等），那就必须要对【空间】维度进行平均
在本示例中，【空间】维度指的是lat和lon，在其他的nc文件中可能还有level等参数
*这里需要使用到numpy

  import numpy as np
  import netCDF4 as nc
  from pandas import DataFrame
  
  #导入文件
  filename = r'D:\data\rain.nc'
  f = nc.Dataset(filename)
  
  #获取数据
  prep = f.variables['prep'][:,:,:]
  time = f.variables['time'][:]
  prep1 = np.mean(prep,axis=(1,2))
  prep1 = list(prep1)
  time1 = list(time1)
  
  #构造DataFrame
  dict1 = {'time':time1,'prep':prep1}
  df = DataFrame(dict1)
